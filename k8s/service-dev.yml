---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: k8sdeploy
  name: k8sdeploy-agent-dev

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8sdeploy-agent-dev
  namespace: k8sdeploy
subjects:
  - kind: ServiceAccount
    name: k8sdeploy-agent-dev
    namespace: k8sdeploy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-dev
  namespace: k8sdeploy
  labels:
    name: agent-dev
    app: agent
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: agent
      name: agent-dev
  template:
    metadata:
      labels:
        app: agent
        name: agent-dev
    spec:
      serviceAccountName: k8sdeploy-agent-dev
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: agent-dev
          image: containers.chewed-k8s.net/k8sdeploy/agent:latest
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: DEVELOPMENT
              value: "false"
            - name: SERVICE_NAME
              value: agent
            - name: HTTP_PORT
              value: "3000"
            - name: K8SDEPLOY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: k8sdeploy-agent
                  key: api-key
            - name: K8SDEPLOY_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: k8sdeploy-agent
                  key: api-secret
            - name: K8SDEPLOY_COMPANY_ID
              valueFrom:
                secretKeyRef:
                  name: k8sdeploy-agent
                  key: company-id

